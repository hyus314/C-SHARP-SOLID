
namespace Logger.Core.Models
{
    using Enums;
    using Interfaces;
    using Exceptions;
    using Utilities;

    public class Message : IMessage
    {
        private string? messageText;
        private string? dateTime;
        public Message(string messageText, string dateTime, ReportLevel reportLevel)
        {
            this.MessageText = messageText;
            this.DateTime = dateTime;
            this.ReportLevel = reportLevel;
        }
        public string DateTime {
            get 
            {
                return dateTime!;
            } 
            private set
            {
                if (string.IsNullOrWhiteSpace(value))
                {
                    throw new EmptyDateTimeException();
                }

                if (!DateTimeValidator.IsDateTimeValid(value))
                {
                    throw new InvalidDateTimeFormatException();
                }

                dateTime = value;
            }
        }


        public ReportLevel ReportLevel { get; private set; }

        public string MessageText
        {
            get { return messageText!; }
            private set
            {
                if (string.IsNullOrWhiteSpace(value))
                {
                    throw new EmptyMessageTextException();
                }

                messageText = value;
            }
        }
    }
}
